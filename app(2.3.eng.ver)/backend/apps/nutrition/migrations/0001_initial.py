# Generated by Django 4.2.7 on 2025-10-24 02:35

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FavoriteFood",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Favorite Food",
                "verbose_name_plural": "Favorite Foods",
                "ordering": ["-added_at"],
            },
        ),
        migrations.CreateModel(
            name="FavoriteMeal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Meal Name")),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("breakfast", "Breakfast"),
                            ("lunch", "Lunch"),
                            ("dinner", "Dinner"),
                            ("snack", "Snack"),
                        ],
                        max_length=20,
                        verbose_name="Meal Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Favorite Meal",
                "verbose_name_plural": "Favorite Meals",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FavoriteMealItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "serving_size",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Serving Size (g)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Favorite Meal Item",
                "verbose_name_plural": "Favorite Meal Items",
            },
        ),
        migrations.CreateModel(
            name="Food",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Food Name")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("protein", "Protein"),
                            ("carbs", "Carbohydrates"),
                            ("fats", "Fats"),
                            ("vegetables", "Vegetables"),
                            ("fruits", "Fruits"),
                            ("dairy", "Dairy"),
                            ("grains", "Grains"),
                            ("snacks", "Snacks"),
                            ("beverages", "Beverages"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Category",
                    ),
                ),
                (
                    "brand",
                    models.CharField(blank=True, max_length=100, verbose_name="Brand"),
                ),
                (
                    "serving_size",
                    models.DecimalField(
                        decimal_places=1,
                        default=100,
                        help_text="Default serving size in grams",
                        max_digits=6,
                        verbose_name="Serving Size (g)",
                    ),
                ),
                (
                    "calories",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Calories (kcal)",
                    ),
                ),
                (
                    "protein",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Protein (g)",
                    ),
                ),
                (
                    "carbohydrates",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Carbohydrates (g)",
                    ),
                ),
                (
                    "fats",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Fats (g)",
                    ),
                ),
                (
                    "fiber",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Fiber (g)",
                    ),
                ),
                (
                    "sugar",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sugar (g)",
                    ),
                ),
                (
                    "sodium",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Sodium in milligrams",
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Sodium (mg)",
                    ),
                ),
                (
                    "vitamin_a",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=6,
                        null=True,
                        verbose_name="Vitamin A (Î¼g)",
                    ),
                ),
                (
                    "vitamin_c",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=6,
                        null=True,
                        verbose_name="Vitamin C (mg)",
                    ),
                ),
                (
                    "calcium",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=6,
                        null=True,
                        verbose_name="Calcium (mg)",
                    ),
                ),
                (
                    "iron",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Iron (mg)",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="food_images/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "is_custom",
                    models.BooleanField(default=False, verbose_name="Custom Food"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Food",
                "verbose_name_plural": "Foods",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Meal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Meal Name")),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("breakfast", "Breakfast"),
                            ("lunch", "Lunch"),
                            ("dinner", "Dinner"),
                            ("snack", "Snack"),
                        ],
                        max_length=20,
                        verbose_name="Meal Type",
                    ),
                ),
                ("date", models.DateField(verbose_name="Date")),
                ("time", models.TimeField(blank=True, null=True, verbose_name="Time")),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="meal_images/",
                        verbose_name="Image",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Meal",
                "verbose_name_plural": "Meals",
                "ordering": ["-date", "-time"],
            },
        ),
        migrations.CreateModel(
            name="MealItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "serving_size",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Serving size in grams",
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Serving Size (g)",
                    ),
                ),
                (
                    "calories",
                    models.DecimalField(
                        decimal_places=1, max_digits=6, verbose_name="Calories"
                    ),
                ),
                (
                    "protein",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Protein (g)"
                    ),
                ),
                (
                    "carbohydrates",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Carbs (g)"
                    ),
                ),
                (
                    "fats",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Fats (g)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Meal Item",
                "verbose_name_plural": "Meal Items",
            },
        ),
        migrations.CreateModel(
            name="MealPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Plan Name")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "goal",
                    models.CharField(
                        choices=[
                            ("weight_loss", "Weight Loss"),
                            ("muscle_gain", "Muscle Gain"),
                            ("maintenance", "Maintenance"),
                            ("endurance", "Endurance"),
                        ],
                        max_length=50,
                        verbose_name="Goal",
                    ),
                ),
                (
                    "daily_calories",
                    models.IntegerField(verbose_name="Daily Calories Target"),
                ),
                (
                    "protein_percentage",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Protein %",
                    ),
                ),
                (
                    "carbs_percentage",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Carbs %",
                    ),
                ),
                (
                    "fats_percentage",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Fats %",
                    ),
                ),
                (
                    "duration_days",
                    models.IntegerField(
                        help_text="Duration of the plan in days",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Duration (days)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Meal Plan",
                "verbose_name_plural": "Meal Plans",
                "ordering": ["-created_at"],
            },
        ),
    ]
