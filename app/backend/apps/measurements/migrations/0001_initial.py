# Generated by Django 4.2.7 on 2025-10-24 02:35

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BodyMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Measurement Date")),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(20),
                            django.core.validators.MaxValueValidator(500),
                        ],
                        verbose_name="Weight (kg)",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Height in centimeters",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(50),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Height (cm)",
                    ),
                ),
                (
                    "body_fat_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(3),
                            django.core.validators.MaxValueValidator(60),
                        ],
                        verbose_name="Body Fat %",
                    ),
                ),
                (
                    "muscle_mass",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Muscle Mass (kg)",
                    ),
                ),
                (
                    "chest",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Chest (cm)",
                    ),
                ),
                (
                    "waist",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Waist (cm)",
                    ),
                ),
                (
                    "hips",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Hips (cm)",
                    ),
                ),
                (
                    "arms_left",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Left Arm (cm)",
                    ),
                ),
                (
                    "arms_right",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Right Arm (cm)",
                    ),
                ),
                (
                    "thighs_left",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Left Thigh (cm)",
                    ),
                ),
                (
                    "thighs_right",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Right Thigh (cm)",
                    ),
                ),
                (
                    "calves_left",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Left Calf (cm)",
                    ),
                ),
                (
                    "calves_right",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Right Calf (cm)",
                    ),
                ),
                (
                    "neck",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Neck (cm)",
                    ),
                ),
                (
                    "shoulders",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        verbose_name="Shoulders (cm)",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="measurement_photos/",
                        verbose_name="Progress Photo",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Body Measurement",
                "verbose_name_plural": "Body Measurements",
                "ordering": ["-date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProgressLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Log Date")),
                (
                    "energy_level",
                    models.IntegerField(
                        help_text="Rate your energy level (1-10)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Energy Level",
                    ),
                ),
                (
                    "mood",
                    models.IntegerField(
                        help_text="Rate your mood (1-10)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Mood",
                    ),
                ),
                (
                    "sleep_quality",
                    models.IntegerField(
                        help_text="Rate your sleep quality (1-10)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Sleep Quality",
                    ),
                ),
                (
                    "sleep_hours",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(24),
                        ],
                        verbose_name="Sleep Hours",
                    ),
                ),
                (
                    "soreness_level",
                    models.IntegerField(
                        help_text="Rate muscle soreness (1-10)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Soreness Level",
                    ),
                ),
                (
                    "stress_level",
                    models.IntegerField(
                        help_text="Rate stress level (1-10)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Stress Level",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "achievements",
                    models.TextField(blank=True, verbose_name="Achievements"),
                ),
                ("challenges", models.TextField(blank=True, verbose_name="Challenges")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Progress Log",
                "verbose_name_plural": "Progress Logs",
                "ordering": ["-date", "-created_at"],
            },
        ),
    ]
